===================================
Configure MaaS variables (optional)
===================================

.. warning::

   A monitoring as a service (MaaS) entity must exist for each target host.
   Verify entities before deploying RPCO with MaaS.

All of the following variables are configured in the
``/etc/openstack_deploy/user_rpco_variables_overrides.yml`` file.

MaaS API authentication
-----------------------

``maas_agent_token``
    The token used by the agents to connect to MaaS. The token is automatically
    generated by the ``setup-maas.yml`` playbook.

``maas_api_key``
    The Cloud API key. The key is needed when the ``maas_auth_method``
    variable is set to ``password``. Edit this value only if the API key
    and user are different from the ``rackspace_cloud_api_key`` variable.

``maas_api_url``
    The URL that MaaS requests are made against. Edit this value only
    if the ``cloud_project_id`` is wrong.

``maas_auth_method``
    Can be set to the following options:

    -  ``password``: authorization uses the variables set in ``maas_api_key``
       and ``maas_username``

    -  ``token``: authorization uses the ``maas_auth_token`` key

``maas_auth_token``
    The token that used for authorizing for the purposes of creating and
    deleting monitors. To generate a ``maas_auth_token``, use
    `Pitchfork <https://pitchfork.eco.rackspace.com/monitoring/>`_.

``maas_auth_url``
    The Rackspace Cloud authorization URL.

``maas_username``
    Username for MaaS to authorize against. The username is needed when
    the ``maas_auth_method`` variable is set to ``password``.

Customizing checks
------------------

``maas_check_period``
    The polling interval, defined in seconds.

``maas_check_period_override``
    This variable allows deployers to override the check period for a
    specific check. (See ``maas_check_period`` to change the default check
    period time for all tests.)

.. code-block:: yaml

    # Example: Customize the check period setting for two checks.
    maas_check_period_override:
      - disk_utilisation: 60
      - conntrack_count: 45

``maas_check_timeout``
    The time that will elapse before timeout, defined in seconds. This
    period must be less than the ``maas_check_period``.

``maas_check_timeout_override``
    This variable allows deployers to override the check timeout for a
    specific check. (See ``maas_check_timeout`` to change the default check
    timeout for all tests.)

.. code-block:: yaml

    # Example: Set a 120 second timeout for the ``cinder_backup_check`` check.
    maas_check_timeout_override:
      - cinder_backup_check: 120

``maas_excluded_devices``
    Specifies devices that are skipped when creating alarms.

``maas_excluded_checks``
    This is a list of regular expressions that specify which checks are
    disabled. The check name includes the hostname (example:
    ``disk_utilisation--infra1``) and the regular expression is applied to
    the entire string.

.. code-block:: yaml

    # Example: Disable all disk utilization checks and do not monitor network
    # throughput on bond0 on infra hosts only.
    maas_excluded_checks:
      - '^disk_utilisation.*'
      - '^network_throughput_bond0--infra.*'

.. note::

    Disabling a check will automatically disable any associated alarms.

``maas_fqdn_extension``
    Sets the fully-qualified domain name (FQDN) extension that will be
    appended to the short names for hosts that are specified in the
    ``openstack_user_config.yml`` file. This avoids the need to specify
    extremely long container names.

    For example, if this variable was not set, a device called
    ``12345-node1.mytestcluster.com``  would have to be named
    ``12345-node1.mytestcluster.com`` in the ``openstack_user_config.yml``
    file for MaaS checks to be created correctly. However, if
    ``maas_fqdn_extension`` is set as ``.mytestcluster.com``, the device
    can be named ``12345-node1`` in the file.

``maas_keystone_user`` and ``maas_keystone_password``
    Intrasolution keystone user and password. These credentials enable
    a specific MaaS user to query the services.

``maas_monitoring_zones``
    Specifies the list of data centers to poll from for remote
    (non-agent) checks. The default is to poll all data centers. The
    default is usually sufficient. For example, if three out of five
    zones return without failure, the check completes successfully. If
    for some reason one data center consistently could not perform the
    checks, or if you want to explicitly exclude a data center, set
    this variable to a list of zones that does not include the blocked
    data center.

``maas_notification_plan``
    The notification plan, which defines who will be notified and for
    what.

``maas_scheme``
    The scheme that tests are set up for. When you use HTTP endpoints for
    remote checks, change the value to ``http``.

``maas_*_scheme``
    If all endpoints in a cloud are ``http`` except horizon, which
    uses ``https``, set ``maas_horizon_scheme: https`` and leave
    ``maas_scheme: http``.

``maas_target_alias``
    An alias used for remote checks when a device has
    multiple public IP addresses or other issues with the default
    primary IP address.

    For remote checks, the entity specified by ``lb_name`` in
    ``openstack_user_config`` has a variable that denotes the IP
    addresses to check against. By default, this is the
    ``public0_v4`` address. Setting this variable enables checks to
    be performed against ``public1_v4`` or any other variable that
    is in the entity for the correct IP address.

``lb_check_on_single_host``
    If this variable is set to ``false``, the load balancer checks will run
    against all service infra hosts. To check only the primary infra host
    (``host[0]``), set the value to ``true``.

Customizing alarms
------------------

``maas_alarm_local_consecutive_count``
    The number of consecutive failures before an alert is generated for
    local checks.

``maas_alarm_remote_consecutive_count``
    The number of consecutive failures before an alert is generated for
    remote checks.

``maas_excluded_alarms``
    This is a list of regular expressions that specify which alarms are
    disabled.

.. code-block:: yaml

    # Example: Disable alarms for network throughput (receiving or
    # transmitting)
    maas_excluded_alarms:
      - '^Network (receive|transmit) rate.*'

.. note::

    Disabling an alarm has no effect on the check itself.



Configure thresholds for alarms
-------------------------------

Any alarm that has a threshold has a variable for that threshold that
can be changed.

A list of these thresholds is located in the ``defaults/main.yml``
file for the ``rpc_maas`` role:

.. code-block:: yaml

   # MaaS CPU idle threshold
   cpu_idle_percent_avg_threshold: 10.0

   # MaaS Memory in use threshold
   memory_used_percentage_threshold: 95.0

   # Set the threshold for the "Max Channels per Connection" Rabbitmq alarm
   rabbitmq_max_channels_per_con_threshold: 10
   rabbitmq_fd_used_threshold: 90
   rabbitmq_proc_used_threshold: 90
   rabbitmq_socket_used_threshold: 90

   # Set the threshold for the "Disk utilisation" MaaS alarms
   disk_utilisation_threshold: 90

   # nf_conntrack threshold
   nf_conntrack_threshold: 90

   # Swift MaaS thresholds
   swift_object_quarantine_failed_percentage_threshold: 5.0
   swift_object_quarantine_average_threshold: 25.0
   swift_object_replication_failure_percentage_threshold: 5.0
   swift_account_quarantine_failed_percentage_threshold: 5.0
   swift_account_quarantine_average_threshold: 25.0
   swift_account_replication_failure_percentage_threshold: 5.0
   swift_container_quarantine_failed_percentage_threshold: 5.0
   swift_container_quarantine_average_threshold: 25.0

To change a threshold on an existing monitor, perform the following steps:

#. Add the variable to the ``user_rpco_variables_overrides.yml`` file.

#. Rerun the MaaS play.

.. note::

   The thresholds can be set up on a host by host basis by setting the
   threshold variable in the ``container_vars:`` section in the
   ``openstack_user_config.yml`` file or ``conf.d/swift.yml`` file
   for the specific host.
