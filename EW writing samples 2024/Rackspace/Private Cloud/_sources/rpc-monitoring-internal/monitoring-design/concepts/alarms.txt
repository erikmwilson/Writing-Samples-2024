======
Alarms
======

When checks run (either locally or remote), they produce output in the
form of metrics. Alarms can be configured to alert when these metrics
breach upper or lower thresholds. Once installed, the MaaS agent runs
on each physical host and either communicates metrics out to the Cloud
Monitoring platform or listens for connections from Cloud Monitoring
pollers.


.. content from
   https://one.rackspace.com/pages/viewpage.action?pageId=192877963

An alarm is an evaluation engine. It takes a `metric
<https://developer.rackspace.com/docs/rackspace-monitoring/v1/api-reference/metrics-operations/>`_
generated by a check and determines a state (OK, WARNING or CRITICAL).
Actions occur based on state changes. For example, from OK to
CRITICAL, an alarm executes the default ``npManaged`` notification
plan for all dedicated entities. A monitoring payload is sent to RBA,
which starts the process of generating a CORE ticket for an alert.
Every alert will have a RBA bake time of 7 minutes before a ticket is
generated.

RPC uses ``consecutiveCount=3`` on all alarms, which only allows a
state change to occur after three successive occurrences of an
identical state.


Alarm elements
~~~~~~~~~~~~~~

.. list-table:: **Alarm elements**
   :widths: 30 70
   :header-rows: 1

   * - Element
     - Description
   * - entityID
     - Parent entityID of the alarm.
   * - checkID
     - Parent checkID of the alarm.
   * - alarmID
     - Unique ID of an alarm (starts with ``alXXXXXXXX``).
   * - Status
     - Boolean which activates or disables the alarm.
   * - Label
     - The name of the alarm.
   * - notification_plan_id
     - Playbooks deploy using ``npManaged`` (for managed dedicated
       devices).
   * - criteria
     - Evaluation criteria written in alarm domain-specific language
       (DSL).
   * - Active/scheduled suppressions
     - If there is an active or future scheduled MaaS suppression for
       this alarmID.


Alarm evaluation process
~~~~~~~~~~~~~~~~~~~~~~~~

This section explains how an alarm results in a CORE ticket. Only
checks with the ``npManaged`` notification plan and an alarm payload
with AlarmStatus of CRITICAL (WARNING is not included) generates a
ticket. The following conditions trigger an alarm failure. The timing
is based on the frequency of the check, with a default of 60 seconds.

#. The check is initially run when an alarm evaluates status from OK
   to CRITICAL.

#. After 60s, the check is run again, evaluating status as CRITICAL
   (second time).

#. After 60s, the check is run again, evaluating status as CRITICAL
   (third time).

#. The MaaS payload is sent to RBA, starting the RBA bake time o seven
   minutes.

#. If RBA doesn't receive an alarm clear message within the seven minute
   window, a ticket is generated.

#. If RBA receives an alarm clear message within the seven minute
   window, (MaaS reports the alarm is OK) a ticket is NOT generated.
